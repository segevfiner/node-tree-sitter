name: build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  release:
    types:
      - released

env:
  PREBUILD_CMD: npx prebuild -r napi --all --strip -u ${{ secrets.GH_TOKEN }}

jobs:

  test:
    strategy:
      matrix:
        os:
          - windows-2019
          - macos-latest
          - ubuntu-20.04
        node:
          - 14
          - 16
          - 18
          - 20
      fail-fast: false
    name: Testing Node ${{ matrix.node }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - run: npm install
      - run: npm test

  publish:
    if: ${{ github.event_name == 'release' }}
    name: Publish to npm
    runs-on: ubuntu-20.04
    needs: test
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org
      - run: npm install
      - run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  prebuild:
    strategy:
      matrix:
        os:
          - windows-2019
          - macos-latest
          - ubuntu-20.04
      fail-fast: false
    name: Prebuild for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: publish
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - run: npm install
      - run: ${{ env.PREBUILD_CMD }}
      - if: runner.os == 'macOS'
        run: ${{ env.PREBUILD_CMD }} --arch arm64
